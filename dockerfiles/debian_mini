# Educational Linux Game Dockerfile
# Based on WebVM - teaches Linux fundamentals through progressive challenges

FROM --platform=i386 i386/debian:buster

RUN sed -i s/deb.debian.org/archive.debian.org/g /etc/apt/sources.list

ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
 && apt-get -y upgrade \
 && apt-get install -y apt-utils zip unzip vim less binutils curl \
 && rm -rf /var/lib/apt/lists/*

# Create user (WebVM expects 'user' not 'student')
RUN useradd -m user && echo "user:password" | chpasswd \
 && echo "root:password" | chpasswd

# WebVM environment setup
RUN mkdir -p /home/user/documents && chown -R user:user /home/user/documents

# LEVEL 1: File System Navigation & Basic Commands
RUN mkdir -p /game/level1

# Create Level 1 welcome file using printf (more reliable than heredoc in Docker)
RUN printf "🎓 LINUX EDUCATION GAME - LEVEL 1 🎓\n\nLearn Linux fundamentals through hands-on challenges!\nComplete each challenge to earn your certificate.\n\nCHALLENGE 1: Navigate and explore\n- Use 'ls' to list files and folders\n- Use 'cd' to change directories\n- Use 'pwd' to see your current location\n\n🎯 GOAL: Find the hidden message in this directory!\nHint: Try 'ls -la' to see hidden files\n" > /game/level1/welcome.txt

# Create hidden clue file
RUN echo "Q29uZ3JhdHVsYXRpb25zISBZb3UgZm91bmQgdGhlIGhpZGRlbiBmaWxlIQpZb3VyIExldmVsIDEga2V5IGlzOiBuYXZpZ2F0b3IK" > /game/level1/.hidden_clue

# Create Level 1 checker script
RUN printf '#!/bin/bash\necho "🔍 LEVEL 1 PROGRESS CHECKER"\necho "=========================="\necho ""\nread -p "Did you find the hidden file? Enter the key you discovered: " input\nif [ "$input" = "navigator" ]; then\n    echo ""\n    echo "🎉 LEVEL 1 COMPLETED! 🎉"\n    echo "Skills learned: ls, cd, pwd, hidden files"\n    echo ""\n    echo "🔓 Level 2 unlocked! Password: navigator"\n    echo "Extract level2.zip using: unzip -P navigator level2.zip"\nelse\n    echo "❌ Not quite right. Keep exploring!"\n    echo "Hint: Use '"'"'cat .hidden_clue | base64 -d'"'"' if you found the file"\nfi\n' > /game/level1/check_level1.sh

RUN chmod +x /game/level1/check_level1.sh

# LEVEL 2: File Creation and Text Manipulation
RUN mkdir -p /tmp/level2/workspace

# Create Level 2 instructions
RUN printf "📝 LEVEL 2: File Operations & Text Skills\n============================================\n\nCHALLENGES:\n1. Create a file called 'my_notes.txt'\n2. Write your name in the file using echo\n3. Create a directory called 'projects'\n4. Copy my_notes.txt into the projects folder\n5. Find the secret word hidden in secret_data.txt\n\nCommands to learn: touch, echo, mkdir, cp, grep, cat\n" > /tmp/level2/instructions.txt

# Create secret data file
RUN printf "The secret word is: creator\nThis line contains no secrets\nRandom text here\nAnother line without secrets\nMore random content\n" > /tmp/level2/secret_data.txt

# Create Level 2 validation script
RUN printf '#!/bin/bash\necho "🔍 LEVEL 2 VALIDATION"\necho "===================="\nscore=0\necho ""\n\nif [ -f "my_notes.txt" ]; then\n    echo "✅ File my_notes.txt created (+1 point)"\n    ((score++))\nelse\n    echo "❌ File my_notes.txt not found"\nfi\n\nif [ -d "projects" ]; then\n    echo "✅ Directory projects created (+1 point)"\n    ((score++))\nelse\n    echo "❌ Directory projects not found"\nfi\n\nif [ -f "projects/my_notes.txt" ]; then\n    echo "✅ File copied to projects (+1 point)"\n    ((score++))\nelse\n    echo "❌ File not copied to projects directory"\nfi\n\necho ""\nread -p "What secret word did you find? " secret\nif [ "$secret" = "creator" ]; then\n    echo "✅ Secret word found! (+2 points)"\n    ((score+=2))\nelse\n    echo "❌ Wrong secret word. Try: grep '"'"'secret'"'"' secret_data.txt"\nfi\n\necho ""\necho "📊 SCORE: $score/5"\n\nif [ $score -eq 5 ]; then\n    echo ""\n    echo "🎉 LEVEL 2 COMPLETED! 🎉"\n    echo "You'"'"'ve mastered file operations!"\n    echo ""\n    echo "🔓 Level 3 unlocked! Password: creator"\nelse\n    echo ""\n    echo "Keep practicing! Complete all tasks to proceed."\nfi\n' > /tmp/level2/validate.sh

RUN chmod +x /tmp/level2/validate.sh

# Package Level 2
RUN cd /tmp && zip -r -P navigator /game/level2.zip level2 && rm -rf /tmp/level2

# LEVEL 3: Text Processing and Search
RUN mkdir -p /tmp/level3/data

# Create Level 3 mission file
RUN printf "🔍 LEVEL 3: Text Processing & Search Mastery\n=============================================\n\nSCENARIO: You're a data analyst investigating log files!\n\nTASKS:\n1. Find all ERROR messages in system.log\n2. Count how many WARNING messages exist\n3. Extract unique IP addresses from access.log\n4. Find the most frequent user in the logs\n\nCommands to master: grep, wc, sort, uniq, cut, awk\n" > /tmp/level3/mission.txt

# Create system log file
RUN printf "2024-01-15 10:30:15 INFO User login successful\n2024-01-15 10:31:22 ERROR Database connection failed\n2024-01-15 10:32:10 WARNING Disk space low\n2024-01-15 10:33:45 INFO Processing request\n2024-01-15 10:34:12 ERROR Authentication failed\n2024-01-15 10:35:33 WARNING Memory usage high\n2024-01-15 10:36:21 ERROR Service unavailable\n2024-01-15 10:37:18 INFO Task completed\n" > /tmp/level3/data/system.log

# Create access log file
RUN printf "192.168.1.100 alice GET /home\n192.168.1.101 bob POST /login\n192.168.1.100 alice GET /profile\n192.168.1.102 charlie GET /home\n192.168.1.100 alice POST /update\n192.168.1.101 bob GET /dashboard\n192.168.1.103 diana GET /home\n192.168.1.100 alice GET /settings\n" > /tmp/level3/data/access.log

# Create Level 3 analysis script
RUN printf '#!/bin/bash\necho "🕵️ DATA ANALYSIS CHALLENGE"\necho "=========================="\necho ""\necho "Let'"'"'s test your text processing skills!"\necho ""\n\nread -p "How many ERROR messages are in system.log? " errors\nread -p "How many WARNING messages are in system.log? " warnings\nread -p "Which user appears most frequently in access.log? " user\n\necho ""\nscore=0\n\nif [ "$errors" = "3" ]; then\n    echo "✅ Correct! Found 3 ERROR messages (+1 point)"\n    ((score++))\nelse\n    echo "❌ Wrong count. Try: grep ERROR data/system.log | wc -l"\nfi\n\nif [ "$warnings" = "2" ]; then\n    echo "✅ Correct! Found 2 WARNING messages (+1 point)"\n    ((score++))\nelse\n    echo "❌ Wrong count. Try: grep WARNING data/system.log | wc -l"\nfi\n\nif [ "$user" = "alice" ]; then\n    echo "✅ Correct! Alice appears most frequently (+2 points)"\n    ((score+=2))\nelse\n    echo "❌ Wrong user. Try: cut -d'"'"' '"'"' -f2 data/access.log | sort | uniq -c | sort -nr"\nfi\n\necho ""\necho "📊 FINAL SCORE: $score/4"\n\nif [ $score -eq 4 ]; then\n    echo ""\n    echo "🎉 LEVEL 3 COMPLETED! 🎉"\n    echo "You'"'"'re now a text processing expert!"\n    echo ""\n    echo "🏆 CONGRATULATIONS! 🏆"\n    echo "You have completed the Linux Fundamentals Course!"\n    echo ""\n    echo "═══════════════════════════════════════"\n    echo "│        CERTIFICATE OF COMPLETION       │"\n    echo "│                                         │"\n    echo "│       Linux Command Line Basics        │"\n    echo "│                                         │"\n    echo "│  ✓ File System Navigation              │"\n    echo "│  ✓ File Operations & Creation          │"\n    echo "│  ✓ Text Processing & Search            │"\n    echo "│                                         │"\n    echo "│       Completed: $(date +%%Y-%%m-%%d)           │"\n    echo "═══════════════════════════════════════"\nelse\n    echo ""\n    echo "Keep practicing! Review the hints above."\nfi\n' > /tmp/level3/analyze.sh

RUN chmod +x /tmp/level3/analyze.sh

# Package Level 3
RUN cd /tmp && zip -r -P creator /game/level3.zip level3 && rm -rf /tmp/level3

# Copy all starting files to user's home
RUN cp -r /game/level1 /home/user/ \
 && cp /game/level2.zip /home/user/ \
 && cp /game/level3.zip /home/user/ \
 && chown -R user:user /home/user

# Create welcome script
RUN printf '#!/bin/bash\nclear\necho "🎓 Welcome to Linux Fundamentals Learning Lab! 🎓"\necho "=================================================="\necho ""\necho "This interactive course will teach you:"\necho "• File system navigation (ls, cd, pwd)"\necho "• File operations (touch, cp, mv, rm)"\necho "• Text processing (grep, cut, sort, uniq)"\necho ""\necho "📂 Start with: cd level1 && cat welcome.txt"\necho ""\necho "💡 Helpful commands:"\necho "   help     - Show this message"\necho "   ls       - List files and folders"\necho "   cd       - Change directory"\necho "   cat      - Display file contents"\necho ""\n' > /home/user/start_learning.sh

RUN chmod +x /home/user/start_learning.sh

# Set up bash configuration
RUN echo 'alias help="/home/user/start_learning.sh"' >> /home/user/.bashrc \
 && echo '/home/user/start_learning.sh' >> /home/user/.bashrc

# Set working directory and environment variables
WORKDIR /home/user
ENV HOME="/home/user" TERM="xterm" USER="user" SHELL="/bin/bash" EDITOR="vim" LANG="en_US.UTF-8" LC_ALL="C"

# Start bash in login mode for WebVM
CMD ["/bin/bash", "-l"]
