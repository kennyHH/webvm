# Educational Linux Game Dockerfile
# Based on WebVM - teaches Linux fundamentals through progressive challenges

FROM --platform=i386 i386/debian:buster

ARG DEBIAN_FRONTEND=noninteractive

RUN sed -i s/deb.debian.org/archive.debian.org/g /etc/apt/sources.list

RUN apt-get update \
 && apt-get -y upgrade \
 && apt-get install -y apt-utils zip unzip vim less binutils curl \
 && rm -rf /var/lib/apt/lists/*

# Create student user
RUN useradd -m student && echo "student:learn123" | chpasswd \
 && echo "root:admin123" | chpasswd

# WebVM environment setup
RUN mkdir -p /home/student/documents && chown -R student:student /home/student/documents

# LEVEL 1: File System Navigation & Basic Commands
RUN mkdir -p /game/level1

# Create Level 1 welcome file
RUN cat > /game/level1/welcome.txt << 'EOL'
🎓 LINUX EDUCATION GAME - LEVEL 1 🎓

Learn Linux fundamentals through hands-on challenges!
Complete each challenge to earn your certificate.

CHALLENGE 1: Navigate and explore
- Use 'ls' to list files and folders
- Use 'cd' to change directories  
- Use 'pwd' to see your current location

🎯 GOAL: Find the hidden message in this directory!
Hint: Try 'ls -la' to see hidden files
EOL

# Create hidden clue file
RUN echo "Q29uZ3JhdHVsYXRpb25zISBZb3UgZm91bmQgdGhlIGhpZGRlbiBmaWxlIQpZb3VyIExldmVsIDEga2V5IGlzOiBuYXZpZ2F0b3IK" > /game/level1/.hidden_clue

# Create Level 1 checker script
RUN cat > /game/level1/check_level1.sh << 'EOL'
#!/bin/bash
echo "🔍 LEVEL 1 PROGRESS CHECKER"
echo "=========================="
echo ""
read -p "Did you find the hidden file? Enter the key you discovered: " input
if [ "$input" = "navigator" ]; then
    echo ""
    echo "🎉 LEVEL 1 COMPLETED! 🎉"
    echo "Skills learned: ls, cd, pwd, hidden files"
    echo ""
    echo "🔓 Level 2 unlocked! Password: navigator"
    echo "Extract level2.zip using: unzip -P navigator level2.zip"
else
    echo "❌ Not quite right. Keep exploring!"
    echo "Hint: Use 'cat .hidden_clue | base64 -d' if you found the file"
fi
EOL

RUN chmod +x /game/level1/check_level1.sh

# LEVEL 2: File Creation and Text Manipulation
RUN mkdir -p /tmp/level2/workspace

# Create Level 2 instructions
RUN cat > /tmp/level2/instructions.txt << 'EOL'
📝 LEVEL 2: File Operations & Text Skills
============================================

CHALLENGES:
1. Create a file called 'my_notes.txt'
2. Write your name in the file using echo
3. Create a directory called 'projects'
4. Copy my_notes.txt into the projects folder
5. Find the secret word hidden in secret_data.txt

Commands to learn: touch, echo, mkdir, cp, grep, cat
EOL

# Create secret data file
RUN cat > /tmp/level2/secret_data.txt << 'EOL'
The secret word is: creator
This line contains no secrets
Random text here
Another line without secrets
More random content
EOL

# Create Level 2 validation script
RUN cat > /tmp/level2/validate.sh << 'EOL'
#!/bin/bash
echo "🔍 LEVEL 2 VALIDATION"
echo "===================="
score=0
echo ""

if [ -f "my_notes.txt" ]; then
    echo "✅ File my_notes.txt created (+1 point)"
    ((score++))
else
    echo "❌ File my_notes.txt not found"ERROR: failed to build: failed to solve: process "/bin/sh -c mkdir -p /tmp/level2/workspace  && echo \"📝 LEVEL 2: File Operations & Text Skills\" > /tmp/level2/instructions.txt  && echo \"============================================\" >> /tmp/level2/instructions.txt  && echo \"\" >> /tmp/level2/instructions.txt  && echo \"CHALLENGES:\" >> /tmp/level2/instructions.txt  && echo \"1. Create a file called 'my_notes.txt'\" >> /tmp/level2/instructions.txt  && echo \"2. Write your name in the file using echo\" >> /tmp/level2/instructions.txt  && echo \"3. Create a directory called 'projects'\" >> /tmp/level2/instructions.txt  && echo \"4. Copy my_notes.txt into the projects folder\" >> /tmp/level2/instructions.txt  && echo \"5. Find the secret word hidden in secret_data.txt\" >> /tmp/level2/instructions.txt  && echo \"\" >> /tmp/level2/instructions.txt  && echo \"Commands to learn: touch, echo, mkdir, cp, grep, cat\" >> /tmp/level2/instructions.txt  && echo \"The secret word is: creator\" > /tmp/level2/secret_data..
Error: Process completed with exit code 1.
fi

if [ -d "projects" ]; then
    echo "✅ Directory projects created (+1 point)"
    ((score++))
else
    echo "❌ Directory projects not found"
fi

if [ -f "projects/my_notes.txt" ]; then
    echo "✅ File copied to projects (+1 point)"
    ((score++))
else
    echo "❌ File not copied to projects directory"
fi

echo ""
read -p "What secret word did you find? " secret
if [ "$secret" = "creator" ]; then
    echo "✅ Secret word found! (+2 points)"
    ((score+=2))
else
    echo "❌ Wrong secret word. Try: grep 'secret' secret_data.txt"
fi

echo ""
echo "📊 SCORE: $score/5"

if [ $score -eq 5 ]; then
    echo ""
    echo "🎉 LEVEL 2 COMPLETED! 🎉"
    echo "You've mastered file operations!"
    echo ""
    echo "🔓 Level 3 unlocked! Password: creator"
else
    echo ""
    echo "Keep practicing! Complete all tasks to proceed."
fi
EOL

RUN chmod +x /tmp/level2/validate.sh

# Package Level 2
RUN cd /tmp && zip -r -P navigator /game/level2.zip level2 && rm -rf /tmp/level2

# LEVEL 3: Text Processing and Search
RUN mkdir -p /tmp/level3/data

# Create Level 3 mission file
RUN cat > /tmp/level3/mission.txt << 'EOL'
🔍 LEVEL 3: Text Processing & Search Mastery
=============================================

SCENARIO: You're a data analyst investigating log files!

TASKS:
1. Find all ERROR messages in system.log
2. Count how many WARNING messages exist
3. Extract unique IP addresses from access.log
4. Find the most frequent user in the logs

Commands to master: grep, wc, sort, uniq, cut, awk
EOL

# Create system log file
RUN cat > /tmp/level3/data/system.log << 'EOL'
2024-01-15 10:30:15 INFO User login successful
2024-01-15 10:31:22 ERROR Database connection failed
2024-01-15 10:32:10 WARNING Disk space low
2024-01-15 10:33:45 INFO Processing request
2024-01-15 10:34:12 ERROR Authentication failed
2024-01-15 10:35:33 WARNING Memory usage high
2024-01-15 10:36:21 ERROR Service unavailable
2024-01-15 10:37:18 INFO Task completed
EOL

# Create access log file
RUN cat > /tmp/level3/data/access.log << 'EOL'
192.168.1.100 alice GET /home
192.168.1.101 bob POST /login
192.168.1.100 alice GET /profile
192.168.1.102 charlie GET /home
192.168.1.100 alice POST /update
192.168.1.101 bob GET /dashboard
192.168.1.103 diana GET /home
192.168.1.100 alice GET /settings
EOL

# Create Level 3 analysis script
RUN cat > /tmp/level3/analyze.sh << 'EOL'
#!/bin/bash
echo "🕵️ DATA ANALYSIS CHALLENGE"
echo "=========================="
echo ""
echo "Let's test your text processing skills!"
echo ""

read -p "How many ERROR messages are in system.log? " errors
read -p "How many WARNING messages are in system.log? " warnings  
read -p "Which user appears most frequently in access.log? " user

echo ""
score=0

if [ "$errors" = "3" ]; then
    echo "✅ Correct! Found 3 ERROR messages (+1 point)"
    ((score++))
else
    echo "❌ Wrong count. Try: grep ERROR data/system.log | wc -l"
fi

if [ "$warnings" = "2" ]; then
    echo "✅ Correct! Found 2 WARNING messages (+1 point)"
    ((score++))
else
    echo "❌ Wrong count. Try: grep WARNING data/system.log | wc -l"
fi

if [ "$user" = "alice" ]; then
    echo "✅ Correct! Alice appears most frequently (+2 points)"
    ((score+=2))
else
    echo "❌ Wrong user. Try: cut -d' ' -f2 data/access.log | sort | uniq -c | sort -nr"
fi

echo ""
echo "📊 FINAL SCORE: $score/4"

if [ $score -eq 4 ]; then
    echo ""
    echo "🎉 LEVEL 3 COMPLETED! 🎉"
    echo "You're now a text processing expert!"
    echo ""
    echo "🏆 CONGRATULATIONS! 🏆"
    echo "You have completed the Linux Fundamentals Course!"
    echo ""
    echo "═══════════════════════════════════════"
    echo "│        CERTIFICATE OF COMPLETION       │"
    echo "│                                         │"
    echo "│       Linux Command Line Basics        │"
    echo "│                                         │"
    echo "│  ✓ File System Navigation              │"
    echo "│  ✓ File Operations & Creation          │"
    echo "│  ✓ Text Processing & Search            │"
    echo "│                                         │"
    echo "│       Completed: $(date +%Y-%m-%d)           │"
    echo "═══════════════════════════════════════"
else
    echo ""
    echo "Keep practicing! Review the hints above."
fi
EOL

RUN chmod +x /tmp/level3/analyze.sh

# Package Level 3
RUN cd /tmp && zip -r -P creator /game/level3.zip level3 && rm -rf /tmp/level3

# Copy all starting files to student's home
RUN cp -r /game/level1 /home/student/ \
 && cp /game/level2.zip /home/student/ \
 && cp /game/level3.zip /home/student/ \
 && chown -R student:student /home/student

# Create welcome script
RUN cat > /home/student/start_learning.sh << 'EOL'
#!/bin/bash
clear
echo "🎓 Welcome to Linux Fundamentals Learning Lab! 🎓"
echo "=================================================="
echo ""
echo "This interactive course will teach you:"
echo "• File system navigation (ls, cd, pwd)"
echo "• File operations (touch, cp, mv, rm)"
echo "• Text processing (grep, cut, sort, uniq)"
echo ""
echo "📂 Start with: cd level1 && cat welcome.txt"
echo ""
echo "💡 Helpful commands:"
echo "   help     - Show this message"
echo "   ls       - List files and folders"
echo "   cd       - Change directory"
echo "   cat      - Display file contents"
echo ""
EOL

RUN chmod +x /home/student/start_learning.sh

# Set up bash configuration
RUN echo 'alias help="/home/student/start_learning.sh"' >> /home/student/.bashrc \
 && echo '/home/student/start_learning.sh' >> /home/student/.bashrc

# Set working directory and environment variables
WORKDIR /home/student
ENV HOME="/home/student" TERM="xterm" USER="student" SHELL="/bin/bash" EDITOR="vim" LANG="en_US.UTF-8" LC_ALL="C"

# Start bash in login mode for WebVM
CMD ["/bin/bash", "-l"]
